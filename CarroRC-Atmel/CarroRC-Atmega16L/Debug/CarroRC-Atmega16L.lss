
CarroRC-Atmega16L.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000e2  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000136  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000136  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000168  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000a0  00000000  00000000  000001a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000007ea  00000000  00000000  00000244  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000693  00000000  00000000  00000a2e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000387  00000000  00000000  000010c1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000e8  00000000  00000000  00001448  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003ae  00000000  00000000  00001530  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000084  00000000  00000000  000018de  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  00001962  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__vector_4>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 48 00 	jmp	0x90	; 0x90 <__vector_8>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 6f 00 	jmp	0xde	; 0xde <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#define F_CPU 16000000UL

int main(void)
{

	Init_Perifericos();
  6c:	0e 94 3b 00 	call	0x76	; 0x76 <Init_Perifericos>
	//Init_Timer_1();
	//Init_Timer_2();
	Init_Usart();
  70:	0e 94 5c 00 	call	0xb8	; 0xb8 <Init_Usart>
  74:	ff cf       	rjmp	.-2      	; 0x74 <main+0x8>

00000076 <Init_Perifericos>:

void Init_Perifericos()
{
	/*DDD5 Salida Timer1
	  DDD7 Salida Timer2*/
	DDRD |= (0<<DDD0)|(1<<DDD1)|(1<<DDD5)|(1<<DDD7);
  76:	81 b3       	in	r24, 0x11	; 17
  78:	82 6a       	ori	r24, 0xA2	; 162
  7a:	81 bb       	out	0x11, r24	; 17
	PORTD |= (1<<PORTD0)|(0<<PORTD1)|(1<<PORTD5)|(1<<PORTD7);  
  7c:	82 b3       	in	r24, 0x12	; 18
  7e:	81 6a       	ori	r24, 0xA1	; 161
  80:	82 bb       	out	0x12, r24	; 18
	
	/*DDA0 Salida Luz Delantera*/
	DDRA |= (1<<DDA0)|(1<<DDA6);
  82:	8a b3       	in	r24, 0x1a	; 26
  84:	81 64       	ori	r24, 0x41	; 65
  86:	8a bb       	out	0x1a, r24	; 26
	PORTA |= (1<<PORTA0)|(1<<PORTA6);	
  88:	8b b3       	in	r24, 0x1b	; 27
  8a:	81 64       	ori	r24, 0x41	; 65
  8c:	8b bb       	out	0x1b, r24	; 27
  8e:	08 95       	ret

00000090 <__vector_8>:
	TCCR2 |= (1<<COM21);//Modo No Invertido (Limpia OC2)
	TCCR2 |= (1<<CS22)|(1<<CS21)|(1<<CS20); //Prescaler 1024 32mS
	OCR2 = 128; //Duty Cycle 128=50%

	TIMSK |= (1<<TOIE2);
	TIFR |= (1<<TOV2);
  90:	1f 92       	push	r1
  92:	0f 92       	push	r0
  94:	0f b6       	in	r0, 0x3f	; 63
  96:	0f 92       	push	r0
  98:	11 24       	eor	r1, r1
  9a:	0f 90       	pop	r0
  9c:	0f be       	out	0x3f, r0	; 63
  9e:	0f 90       	pop	r0
  a0:	1f 90       	pop	r1
  a2:	18 95       	reti

000000a4 <__vector_4>:
}

ISR(TIMER2_OVF_vect)
{		
  a4:	1f 92       	push	r1
  a6:	0f 92       	push	r0
  a8:	0f b6       	in	r0, 0x3f	; 63
  aa:	0f 92       	push	r0
  ac:	11 24       	eor	r1, r1
}
  ae:	0f 90       	pop	r0
  b0:	0f be       	out	0x3f, r0	; 63
  b2:	0f 90       	pop	r0
  b4:	1f 90       	pop	r1
  b6:	18 95       	reti

000000b8 <Init_Usart>:

#define F_CPU 16000000UL

void Init_Usart()
{	
	DDRD |= (1<<DDD3);
  b8:	81 b3       	in	r24, 0x11	; 17
  ba:	88 60       	ori	r24, 0x08	; 8
  bc:	81 bb       	out	0x11, r24	; 17
	PORTD |= (0<<PORTD3);
  be:	82 b3       	in	r24, 0x12	; 18
  c0:	82 bb       	out	0x12, r24	; 18
	
	UCSRA |= (1<<RXC)|(0<<TXC)|(1<<UDRE)|(0<<FE)|(0<<DOR);
  c2:	8b b1       	in	r24, 0x0b	; 11
  c4:	80 6a       	ori	r24, 0xA0	; 160
  c6:	8b b9       	out	0x0b, r24	; 11
	UCSRB |= (1<<RXEN)|(1<<TXEN);
  c8:	8a b1       	in	r24, 0x0a	; 10
  ca:	88 61       	ori	r24, 0x18	; 24
  cc:	8a b9       	out	0x0a, r24	; 10
	UCSRC |= (1<<URSEL)|(1<<UMSEL)|(1<<UPM1)|(1<<UCSZ1)|(1<<UCSZ0)|(0<<UCPOL);
  ce:	80 b5       	in	r24, 0x20	; 32
  d0:	86 6e       	ori	r24, 0xE6	; 230
  d2:	80 bd       	out	0x20, r24	; 32
	UBRRL = 416;  
  d4:	80 ea       	ldi	r24, 0xA0	; 160
  d6:	89 b9       	out	0x09, r24	; 9
	UDR = 1; 
  d8:	81 e0       	ldi	r24, 0x01	; 1
  da:	8c b9       	out	0x0c, r24	; 12
  dc:	08 95       	ret

000000de <_exit>:
  de:	f8 94       	cli

000000e0 <__stop_program>:
  e0:	ff cf       	rjmp	.-2      	; 0xe0 <__stop_program>
